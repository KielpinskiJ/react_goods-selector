{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleSelect","good","setState","handleReset","this","className","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,aAAcE,KAPpB,EAWEE,YAAc,WACZ,EAAKD,SAAS,CACZH,aAAc,QAbpB,4CAiBE,WAA2B,IAAD,OAChBA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACGN,EAEG,qBAAIM,UAAU,sCAAd,oBACMN,EADN,gBAGE,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,iBAKlB,oBAAIE,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAACP,GAAD,OACT,qBAEE,UAAQ,OACRI,UACEN,IAAiBE,EACb,+BACA,GANR,UASE,6BACGF,IAAiBE,EAEd,wBACE,UAAQ,eACRK,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKJ,YAJhB,eAUA,wBACE,UAAQ,YACRG,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKP,aAAaC,IAJnC,iBAWN,oBAAI,UAAQ,YAAYI,UAAU,eAAlC,SACGJ,MAjCEA,iBA1CrB,GAAyBQ,IAAMC,WCpB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b4b0b345.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ninterface State {\n  selectedGood: string | null;\n}\n\nexport class App extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  handleSelect = (good: string) => {\n    this.setState({\n      selectedGood: good,\n    });\n  };\n\n  handleReset = () => {\n    this.setState({\n      selectedGood: null,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.handleReset}\n              />\n            </h1>\n          )\n          : (\n            <h1 className=\"title\">No goods selected</h1>\n          )}\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={\n                  selectedGood === good\n                    ? 'has-background-success-light'\n                    : ''\n                }\n              >\n                <td>\n                  {selectedGood === good\n                    ? (\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={this.handleReset}\n                      >\n                        -\n                      </button>\n                    )\n                    : (\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => this.handleSelect(good)}\n                      >\n                        +\n                      </button>\n                    )}\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}